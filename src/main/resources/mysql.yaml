getAllMeals: >
  select m.ID,m.NAME,(SELECT MAX(w.DATE_BEGIN) FROM PlannedMeals pm JOIN WeeklySchedule w on w.ID = pm.SCHEDULE_ID where pm.MEAL_ID = m.ID and w.DISABLED = 0) as LAST_EATEN, m.FAVORITE,m.RECIPE_URL,m.NOTES, COUNT(*) as CNT from Meals m 
  LEFT JOIN PlannedMeals ppm on ppm.MEAL_ID = m.ID
  LEFT JOIN WeeklySchedule ws on ppm.SCHEDULE_ID = ws.ID
  where m.DISABLED = 0 AND (ws.DISABLED = 0 OR ws.DISABLED is null) AND m.USER like ? group by m.ID,m.NAME
  ORDER BY {{SORT}} {{SORT_DIRECTION}}

searchMeals: >
  select DISTINCT m.ID from Meals m LEFT JOIN MealTags mt on m.ID = mt.MEAL_ID where (LOWER(NAME) like LOWER(:term) or LOWER(NOTES) like LOWER(:term)) and DISABLED = 0 and m.USER like :user {{ADDITIONAL_PARAMS}}
  UNION
  select DISTINCT m.ID from Meals m LEFT JOIN MealIngredients mi on m.ID = mi.MEAL_ID LEFT JOIN Ingredients i on mi.INGREDIENT_ID = i.ID LEFT JOIN MealTags mt on m.ID = mt.MEAL_ID where m.DISABLED = 0 and m.USER like :user AND LOWER(i.NAME) like LOWER(:term) {{ADDITIONAL_PARAMS}}

getAllWeeks: >
  select * from WeeklySchedule where DISABLED = 0 and USER like ? ORDER BY DATE_BEGIN DESC

getNNumberOfWeeks: >
  select * from WeeklySchedule where DISABLED = 0 and USER like ? ORDER BY DATE_BEGIN DESC LIMIT ?

createWeek: >
  INSERT INTO WeeklySchedule (DATE_BEGIN,DATE_END,USER) values (?,?,?)

createMeal: >
  INSERT INTO Meals (NAME, FAVORITE, NOTES, RECIPE_URL,USER) values (?,?,?,?,?)

createSide: >
  INSERT INTO Sides (NAME,USER) values (?,?)

removeMealFromWeek: >
  DELETE FROM PlannedMeals WHERE MEAL_ID = ? AND SCHEDULE_ID = ?

deleteWeek: >
  UPDATE WeeklySchedule SET DISABLED = 1 WHERE ID = ?

deleteMeal: >
  UPDATE Meals SET DISABLED = 1 WHERE ID = ?

deleteMealTags: >
  DELETE FROM MealTags WHERE MEAL_ID = ?

deleteMealIngredients: >
  DELETE FROM MealIngredients WHERE MEAL_ID = ?

getWeekById: >
  select * from WeeklySchedule where ID = ?

addMealToWeek: >
  INSERT INTO PlannedMeals (SCHEDULE_ID,MEAL_ID) values (?,?)

getLatestMealId: >
  select ID from Meals where DISABLED = 0 and USER like ? ORDER BY ID desc LIMIT 1

getLatestSideId: >
  select ID from Sides where DISABLED = 0 and USER like ? ORDER BY ID desc LIMIT 1

getLatestWeekId: >
  select ID from WeeklySchedule where DISABLED = 0 and USER like ? ORDER BY ID desc LIMIT 1

updateMeal: >
  UPDATE Meals SET NAME = ?, FAVORITE = ?, NOTES = ?, RECIPE_URL = ? WHERE ID = ?

updateSide: >
  UPDATE Sides SET NAME = ?, NOTES = ?, RECIPE_URL = ? WHERE ID = ?

deleteIngredientsInMeal: >
  DELETE FROM MealIngredients WHERE INGREDIENT_ID = ? AND MEAL_ID = ?

deleteIngredientsInSide: >
  DELETE FROM SideIngredients WHERE INGREDIENT_ID = ? AND SIDE_ID = ?

deleteTagsInMeal: >
  DELETE FROM MealTags WHERE TAG_ID = ? AND MEAL_ID = ?

insertMealIngredients: >
  INSERT INTO MealIngredients (INGREDIENT_ID,MEAL_ID) values (?,?)

insertSideIngredients: >
  INSERT INTO SideIngredients (INGREDIENT_ID,SIDE_ID) values (?,?)

insertMealTags: >
  INSERT INTO MealTags (TAG_ID,MEAL_ID) values (?,?)

getAllMealsInWeek: >
  select m.ID,m.NAME,m.FAVORITE,m.RECIPE_URL,m.NOTES from PlannedMeals pm INNER JOIN Meals m on pm.MEAL_ID = m.ID where pm.SCHEDULE_ID = ?

getMealLastEaten: >
  select MAX(DATE_BEGIN) as LAST_EATEN from PlannedMeals pm INNER JOIN WeeklySchedule w on w.ID = pm.SCHEDULE_ID where pm.MEAL_ID = ?

getIngredientsInMeal: >
  select i.ID,i.NAME,i.DISABLED from Ingredients i INNER JOIN MealIngredients mi ON i.ID = mi.INGREDIENT_ID where mi.MEAL_ID = ?

getIngredientsInSide: >
  select i.ID,i.NAME,i.DISABLED from Ingredients i INNER JOIN SideIngredients si ON i.ID = si.INGREDIENT_ID where si.SIDE_ID = ?

getMealTags: >
  select * from MealTags mt INNER JOIN Tags t on mt.TAG_ID = t.ID where mt.MEAL_ID = ?

getAllTags: >
  select DISTINCT Tags.ID, Tags.NAME from Tags INNER JOIN MealTags on Tags.ID = MealTags.TAG_ID where Tags.USER like ?

getAllSides: >
  select * from Sides where DISABLED = 0 AND USER like ? ORDER BY NAME ASC

searchSides: >
  select * from (
    select DISTINCT ID, NAME, NOTES, RECIPE_URL from Sides where DISABLED = 0 AND USER like :user AND LOWER(NAME) like LOWER(:term)
    union
    select DISTINCT s.ID, s.NAME, s.NOTES, s.RECIPE_URL from Sides s LEFT JOIN SideIngredients si on s.ID = si.SIDE_ID LEFT JOIN Ingredients i on si.INGREDIENT_ID = i.ID where s.DISABLED = 0 AND s.USER like :user AND LOWER(i.NAME) like LOWER(:term)
  ) as a
  ORDER BY NAME ASC

registerNewUser: >
  INSERT INTO users (username,refreshToken,enabled) values (?,?,1)

updateUserRefreshToken: >
  UPDATE users set refreshToken = ? where username = ?

addUserAuthorities: >
  INSERT INTO authorities (username, authority) values (?,'USER')

getAllIngredients: >
  select DISTINCT i.ID, i.NAME, i.DISABLED from Ingredients i INNER JOIN MealIngredients mi on i.ID = mi.INGREDIENT_ID WHERE i.USER like :user
  union
  select DISTINCT i.ID, i.NAME, i.DISABLED from Ingredients i INNER JOIN SideIngredients si on i.ID = si.INGREDIENT_ID WHERE i.USER like :user
  ORDER BY NAME ASC

getMealById: >
  select m.ID,m.NAME,(SELECT MAX(w.DATE_BEGIN) FROM PlannedMeals pm JOIN WeeklySchedule w on w.ID = pm.SCHEDULE_ID where pm.MEAL_ID = m.ID and w.DISABLED = 0) as LAST_EATEN, m.FAVORITE,m.RECIPE_URL,m.NOTES, COUNT(*) as CNT from Meals m 
  LEFT JOIN PlannedMeals ppm on ppm.MEAL_ID = m.ID
  LEFT JOIN WeeklySchedule ws on ppm.SCHEDULE_ID = ws.ID
  where m.ID = ? and (ws.DISABLED = 0 OR ws.DISABLED is null) group by m.ID

getSideById: >
  select * from Sides where ID = ?

getMealsByIds: >
  select m.ID,m.NAME,(SELECT MAX(w.DATE_BEGIN) FROM PlannedMeals pm JOIN WeeklySchedule w on w.ID = pm.SCHEDULE_ID where pm.MEAL_ID = m.ID and w.DISABLED = 0) as LAST_EATEN, m.FAVORITE,m.RECIPE_URL,m.NOTES, COUNT(*) as CNT
  from Meals m LEFT JOIN PlannedMeals ppm on ppm.MEAL_ID = m.ID
  LEFT JOIN WeeklySchedule ws on ppm.SCHEDULE_ID = ws.ID
  where m.ID IN (:mealIds) and (ws.DISABLED = 0 OR ws.DISABLED is null)
  group by m.ID
  ORDER BY {{SORT}} {{SORT_DIRECTION}}

createIngredient: >
  INSERT INTO Ingredients (NAME,USER) values (?,?)

getNMostRecentIngredients: >
  SELECT * FROM Ingredients WHERE USER like ? ORDER BY ID Desc LIMIT ?

createTag: >
  INSERT INTO Tags (NAME,USER) values (?,?)

getNMostRecentTags: >
  SELECT * FROM Tags where USER like ? ORDER BY ID Desc LIMIT ?

getUser: >
  SELECT * FROM users where username = :username OR email = :username and enabled = 1

getAuthoritiesByUsername: >
  SELECT * FROM authorities where username = ?

toggleFavorite: >
  UPDATE Meals set FAVORITE = ? where ID = ?

storeCookieToken: >
  insert into StoredLogins (username, LOGIN_COOKIE, CREATED_ON) values (?,?,CURRENT_TIMESTAMP)

getUserCookieToken: >
  SELECT * FROM StoredLogins where LOGIN_COOKIE = ?

deleteCookieToken: >
  delete from StoredLogins where LOGIN_COOKIE = ?

updateUserPreferences: >
  UPDATE users set pinFavorites = ?, sort = ?, sortDirection = ?, weekStartDay = ?, krogerLocationId = ? where username = ?

deleteSide: >
  UPDATE Sides set DISABLED = 1 where ID = ?

getMealSides: >
  SELECT * FROM Sides s JOIN MealSides ms on s.ID = ms.SIDE_ID JOIN PlannedMeals pm on ms.MEAL_ID = pm.ID where pm.MEAL_ID = ? and pm.SCHEDULE_ID = ? AND s.DISABLED = 0

addSideToMeal: >
  INSERT INTO MealSides (MEAL_ID,SIDE_ID) values ((select ID From PlannedMeals where MEAL_ID = ? and SCHEDULE_ID = ? ORDER BY ID DESC LIMIT 1),?)

getWeekMealById: >
  select m.ID,m.NAME,m.FAVORITE,m.RECIPE_URL,m.NOTES from PlannedMeals pm INNER JOIN Meals m on pm.MEAL_ID = m.ID where m.ID = ? and pm.SCHEDULE_ID = ?

removeSideFromWeekMeal: >
  DELETE FROM MealSides WHERE MEAL_ID = (select ID From PlannedMeals where MEAL_ID = ? and SCHEDULE_ID = ? ORDER BY ID DESC LIMIT 1) AND SIDE_ID = ?

getIngredientById: >
  Select * From Ingredients where ID = ?

getIngredientIdByName: >
  SELECT * FROM Ingredients where NAME = ? and USER like ?

getLatestIngredientId: >
  SELECT * FROM Ingredients where USER like ? order by ID DESC LIMIT 1

addImageToMeal: >
  INSERT INTO RecipeImageUrls (IMAGE_URL, MEAL_ID) values (?,?)

flagRecipeUrlSelfHosted: >
  UPDATE Meals SET RECIPE_URL = 'self_hosted' where ID = ?

getRecipeImagesForMeal: >
  SELECT * FROM RecipeImageUrls where MEAL_ID = ?

updateUser: >
  UPDATE users set firstName = ?, lastName = ?, email = ? where username = ?

deleteUserStoredLogins: >
  DELETE FROM StoredLogins where username = ?

deleteUserAuthorities: >
  DELETE FROM authorities where username = ?

deleteUser: >
  DELETE FROM users where username = ?

deleteUser: >
  DELETE FROM users where username = ?

deleteUserPlannedWeeks: >
  DELETE FROM PlannedMeals where SCHEDULE_ID in (Select ID from WeeklySchedule where USER = ?)

deleteUserWeeks: >
  DELETE FROM WeeklySchedule where USER = ?

deleteUserMeals: >
  DELETE FROM Meals where USER = ?

deleteUserSides: >
  DELETE FROM Sides where USER = ?

deleteUserMealSides: >
  DELETE FROM MealSides where MEAL_ID in (Select ID from Meals where USER = ?)

deleteUserSideIngredients: >
  DELETE FROM SideIngredients where INGREDIENT_ID in (select ID from Ingredients where USER = ?)

deleteUserMealIngredients: >
  DELETE FROM MealIngredients where INGREDIENT_ID in (select ID from Ingredients where USER = ?)

deleteUserIngredients: >
  DELETE FROM Ingredients where USER = ?

deleteUserMealTags: >
  DELETE FROM MealTags where TAG_ID in (Select ID from Tags where USER = ?)

deleteUserTags: >
  DELETE FROM Tags where USER = ?

log: >
  INSERT INTO Log (USERNAME,DEVICE,METHOD,REQ_URL,PARAMS) values (?,?,?,?,?)